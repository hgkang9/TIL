1. 계산기
import sys
sys.stdin = open("input_1224.txt")


for tc in range(1,11):
	length = int(input())

	stack = []
	result = []

	data = input()

	for s in data:
		if s not in ['(',')','+','-','*','/']:
			result.append(s)
		else:
			if len(stack) == 0:
				stack.append(s)
			elif s == '(' or s == '*' or s == '/':
				stack.append(s)
			elif s == '+' or s == '-':
				if stack[-1] == '*' or stack[-1] == '/':
					while len(stack) != 0 and stack[-1] == '*' or stack[-1] == '/' :
						result.append(stack.pop())
				stack.append(s)
			elif s == ')':
				while len(stack) != 0 and stack[-1] != '(':
					result.append(stack.pop())
				stack.pop()


	new_stack = []
	for s in result:
		if s not in ['+', '-', '*', '/']:
			new_stack.append(int(s))
		else:
			a = new_stack.pop()
			b = new_stack.pop()
			if s == '+':
				new_stack.append(b+a)
			elif s == '-':
				new_stack.append(b-a)
			elif s == '*':
				new_stack.append(b*a)
			elif s == '/':
				new_stack.append(b/a)

	print(f'#{tc} {new_stack[0]}')

2. forth
import sys
sys.stdin = open("input_4874.txt")

t = int(input())

def calcul(data):
	new_stack = []
	for s in data:
		if s not in ['+', '-', '*', '/', '.']:
			new_stack.append(int(s))
		else:
			if s == '.':
				break
			elif len(new_stack) <= 1:
				return False
			a = new_stack.pop()
			b = new_stack.pop()
			if s == '+':
				new_stack.append(b + a)
			elif s == '-':
				new_stack.append(b - a)
			elif s == '*':
				new_stack.append(b * a)
			elif s == '/':
				new_stack.append(int(b / a))

	if len(new_stack) == 1:
		return new_stack[0]
	else:
		return False

for tc in range(1,t+1):
	data = list(map(str,input().split()))


	if calcul(data):
		print(f'#{tc} {calcul(data)}')
	else:
		print(f'#{tc} error')
3.미로

import sys
sys.stdin = open("input_4875.txt")

t = int(input())

dy = [-1,1,0,0]
dx = [0,0,-1,1]
data=[]

def issafe(y,x,length):
	if y >= 0 and y < length and x >=0 and x < length and data[y][x] != 1:
		return True
	else:
		return False

def miro(start_y,start_x,end_y,end_x):
	data[start_y][start_x] = 1

	if start_y == end_y and start_x == end_x:
		return
	else:
		for dir in range(4):
			if issafe(start_y+dy[dir],start_x+dx[dir],len(data[0])):
				miro(start_y+dy[dir],start_x+dx[dir],end_y,end_x)



for tc in range(1,t+1):
	n = int(input())
	data = []

	for i in range(n):
		data.append(list(map(int,input())))

	for y in range(5):
		for x in range(5):
			if data[y][x] == 2:
				start_y = y
				start_x = x
			elif data[y][x] == 3:
				end_y = y
				end_x = x

	miro(start_y,start_x,end_y,end_x)

	if data[end_y][end_x] == 1:
		print(f'#{tc} 1')
	else:
		print(f'#{tc} 0')
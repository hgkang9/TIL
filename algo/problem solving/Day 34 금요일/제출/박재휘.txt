#### 최대상금

import sys
sys.stdin=open("input.txt","r")


def dig(r_data,count):
    global t,mx,qq,ww
    for i in range(len(r_data)-1):
        x=i
        while x <= len(r_data)-2:
            x+=1

            r_data[i],r_data[x]=r_data[x],r_data[i]
            a=r_data
            if (a[:],[count]) in temp:
                r_data[i], r_data[x] = r_data[x], r_data[i]
                continue
            temp.append((a[:],[count]))
            r_data[i], r_data[x] = r_data[x], r_data[i]

num=int(input())
for j in range(num):
    data,t=input().split()
    t=int(t)
    r_data=[]
    copydata=int(data[:])
    for i in range(len(data)):
        r_data.append(int(data[i]))
    temp=[]
    mx=[0,0,0]
    cc=[]
    count=1
    dig(r_data,count)
    if t==1:
            p=(temp[temp.index(max(temp))][0])

            for i in range(len(p)):
                cc.extend(str(p[i]))
            print("#{} {}".format(j+1,"".join(cc)))

    if t>1:
        for k in range(t-1):
            for i in range(len(temp)):
                dig(temp[i][0],k)
                temp.pop(0)
        p = (temp[temp.index(max(temp))][0])

        for i in range(len(p)):
            cc.extend(str(p[i]))
        print("#{} {}".format(j + 1, "".join(cc)))

#### 2048

import sys, copy
sys.stdin=open("input.txt","r")

import copy

def left(m_data):
    global num1

    for y in range(num1):
        x=0
        count = 0
        while x!=num1 and count!=num1:
            count+=1
            if count==num1:
                break
            if m_data[y][x]==0:
                m_data[y].pop(x)
                m_data[y].append(0)
            else: x+=1

def my_sum(m_data):
    for y in range(num1):
        for x in range(1,num1):

            if m_data[y][x-1]==m_data[y][x]:
                m_data[y][x-1] = m_data[y][x-1]+m_data[y][x]
                m_data[y].pop(x)
                m_data[y].append(0)

def routeleft90(a,b):
    global num1
    for y in range(num1):
        for x in range(num1):
            a[num1-1-x][y]=b[y][x]
def routeright90(a,b):
    global num1
    for y in range(num1):
        for x in range(num1):
            a[x][num1-y-1]=b[y][x]


num=int(input())
for j in range(num):
    num1, target=input().split()
    num1=int(num1)
    data=[list(map(int,input().split())) for _ in range(num1)]

    m_data=copy.deepcopy(data)
    right_data=copy.deepcopy(data)

    if target=='up':
        routeleft90(m_data, data)
        left(m_data)
        my_sum(m_data)
        r_data=copy.deepcopy(m_data)
        routeright90(r_data,m_data)
        print("#{}".format(j+1))
        for i in range(num1):
            print(*r_data[i])

    elif target=='down':
        routeright90(m_data,data)
        left(m_data)
        my_sum(m_data)
        r_data=copy.deepcopy(m_data)
        routeleft90(r_data,m_data)
        print("#{}".format(j + 1))
        for i in range(num1):
            print(*r_data[i])

    elif target=='left':
        left(m_data)
        my_sum(m_data)
        print("#{}".format(j + 1))
        for i in range(num1):
            print(*m_data[i])
    elif target=="right":
        routeleft90(right_data,data)
        routeleft90(m_data,right_data)
        left(m_data)
        my_sum(m_data)
        right_data=copy.deepcopy(m_data)
        routeright90(right_data,m_data)
        r_data=copy.deepcopy(right_data)
        routeright90(r_data,right_data)
        print("#{}".format(j+1))
        for i in range(num1):
            print(*r_data[i])




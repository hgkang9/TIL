#동렬이의 일 분배

import sys
sys.stdin = open("task_permutation.txt", "r")

T = int(input())


def work(t_s, p_sum, depth):
    global max_sum
    global task_table
    if depth == N or p_sum < max_sum:
        print(p_sum)
        return
    else:
        for w in range(N):
            for worker in range(N):
                if not done_work[w] and not done_worker[worker]:
                    done_work[w] = 1
                    done_worker[worker] = 1
                    p_sum *= t_s[w][worker] * 0.01
                    if p_sum > max_sum:
                        max_sum = p_sum
                    work(t_s, p_sum, w+1)
                    done_work[w] = 0
                    done_worker[worker] = 0
                    work(t_s, p_sum, w+1)


for test_case in range(1, T+1):
    N = int(input())
    task_table = [[0] * N for person in range(N)]
    done_work = [0] * N
    done_worker = [0] * N
    max_sum = -1
    for task in range(N):
        task_table[task] = list(map(int, input().split()))


    print("#%d" % test_case, end = ' ')
    work(task_table, 1, 0)